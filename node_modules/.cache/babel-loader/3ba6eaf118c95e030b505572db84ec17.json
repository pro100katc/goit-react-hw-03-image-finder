{"ast":null,"code":"var _jsxFileName = \"/Users/serhiikotcinskiy/Documents/JS 59/goit-react-hw-03-image-finder/src/components/Modal/Modal.jsx\";\nimport { Overlay, ModalContainer } from './Modal.styled';\nimport { createPortal } from 'react-dom';\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        this.props.onClose();\n      }\n    };\n\n    this.findImage = () => {\n      const {\n        images,\n        id\n      } = this.props;\n\n      if (id) {\n        return images.find(image => image.id === id);\n      }\n    };\n\n    this.handleBackdropClick = e => {\n      if (e.target === e.currentTarget) {\n        this.props.onClose();\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  render() {\n    const findedImage = this.findImage();\n    return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(Overlay, {\n      onClick: this.handleBackdropClick,\n      children: /*#__PURE__*/_jsxDEV(ModalContainer, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: findedImage.largeImageURL,\n          alt: findedImage.tags\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), modalRoot);\n  }\n\n}\n\nModal.propTypes = {\n  images: PropTypes.array,\n  id: PropTypes.number,\n  onClose: PropTypes.func.isRequired\n};\nexport default Modal;","map":{"version":3,"sources":["/Users/serhiikotcinskiy/Documents/JS 59/goit-react-hw-03-image-finder/src/components/Modal/Modal.jsx"],"names":["Overlay","ModalContainer","createPortal","React","Component","PropTypes","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","findImage","images","id","find","image","handleBackdropClick","target","currentTarget","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","findedImage","largeImageURL","tags","propTypes","array","number","func","isRequired"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,cAAlB,QAAwC,gBAAxC;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAEA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAlB;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAS5BM,aAT4B,GASZC,CAAC,IAAI;AACnB,UAAIA,CAAC,CAACC,IAAF,KAAW,QAAf,EAAyB;AACvB,aAAKC,KAAL,CAAWC,OAAX;AACD;AACF,KAb2B;;AAAA,SAe5BC,SAf4B,GAehB,MAAM;AAChB,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAiB,KAAKJ,KAA5B;;AACA,UAAII,EAAJ,EAAQ;AACN,eAAOD,MAAM,CAACE,IAAP,CAAYC,KAAK,IAAIA,KAAK,CAACF,EAAN,KAAaA,EAAlC,CAAP;AACD;AACF,KApB2B;;AAAA,SAsB5BG,mBAtB4B,GAsBNT,CAAC,IAAI;AACzB,UAAIA,CAAC,CAACU,MAAF,KAAaV,CAAC,CAACW,aAAnB,EAAkC;AAChC,aAAKT,KAAL,CAAWC,OAAX;AACD;AACF,KA1B2B;AAAA;;AAC5BS,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKf,aAAxC;AACD;;AAEDgB,EAAAA,oBAAoB,GAAG;AACrBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,SAA3B,EAAsC,KAAKjB,aAA3C;AACD;;AAqBDkB,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,KAAKd,SAAL,EAApB;AACA,wBAAOb,YAAY,eAEf,QAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKkB,mBAAvB;AAAA,6BACE,QAAC,cAAD;AAAA,+BACE;AAAK,UAAA,GAAG,EAAES,WAAW,CAACC,aAAtB;AAAqC,UAAA,GAAG,EAAED,WAAW,CAACE;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFe,EAObzB,SAPa,CAAnB;AAUD;;AAxC2B;;AA2C9BG,KAAK,CAACuB,SAAN,GAAkB;AAChBhB,EAAAA,MAAM,EAAEX,SAAS,CAAC4B,KADF;AAEhBhB,EAAAA,EAAE,EAAEZ,SAAS,CAAC6B,MAFE;AAGhBpB,EAAAA,OAAO,EAAET,SAAS,CAAC8B,IAAV,CAAeC;AAHR,CAAlB;AAMA,eAAe3B,KAAf","sourcesContent":["import { Overlay, ModalContainer } from './Modal.styled';\nimport { createPortal } from 'react-dom';\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  findImage = () => {\n    const { images, id } = this.props;\n    if (id) {\n      return images.find(image => image.id === id);\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const findedImage = this.findImage();\n    return createPortal(\n     \n        <Overlay onClick={this.handleBackdropClick}>\n          <ModalContainer>\n            <img src={findedImage.largeImageURL} alt={findedImage.tags} />\n          </ModalContainer>\n        </Overlay>\n        , modalRoot\n      \n    );\n  }\n}\n\nModal.propTypes = {\n  images: PropTypes.array,\n  id: PropTypes.number,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}