{"ast":null,"code":"var _jsxFileName = \"/Users/serhiikotcinskiy/Documents/JS 59/goit-react-hw-03-image-finder/src/components/App.jsx\";\nimport { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport SearchBar from 'components/Searchbar';\nimport ImageGallery from 'components/ImageGallery';\nimport Button from 'components/Button';\nimport Modal from 'components/Modal';\nimport ImageErrorView from 'components/ImageErrorView';\nimport Loader from 'components/Loader';\nimport imagesAPI from '../services/api';\nimport { Notify } from './ImageGallery/ImageGallery.styled';\nimport { AppContainer } from './App.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      images: [],\n      id: null,\n      searchQuery: '',\n      page: 1,\n      isLoading: false,\n      loadMore: false,\n      showModal: false,\n      isEmpty: false,\n      error: null,\n      per_page: 12\n    };\n\n    this.getPhotos = async (query, page) => {\n      if (!query) return;\n      this.setState({\n        isLoading: true\n      });\n\n      try {\n        const {\n          hits,\n          totalHits\n        } = await imagesAPI(query, page);\n        console.log(hits, totalHits);\n\n        if (hits.length === 0) {\n          this.setState({\n            isEmpty: true\n          });\n        }\n\n        this.setState(prevState => ({\n          images: [...prevState.images, ...hits],\n          loadMore: this.state.page < Math.ceil(totalHits / this.state.per_page)\n        }));\n      } catch (error) {\n        this.setState({\n          error: error.message\n        });\n      } finally {\n        this.setState({\n          isLoading: false\n        });\n      }\n    };\n\n    this.handleFormSubmit = searchQuery => {\n      this.setState({\n        searchQuery: searchQuery,\n        page: 1,\n        loadMore: false,\n        images: [],\n        isEmpty: false\n      });\n    };\n\n    this.loadMore = () => {\n      this.setState(prevState => ({\n        page: prevState.page + 1\n      }));\n    };\n\n    this.openModal = e => {\n      this.setState({\n        showModal: true,\n        id: e.currentTarget.dataset.id\n      });\n    };\n\n    this.closeModal = e => {\n      this.setState({\n        showModal: false\n      });\n    };\n  }\n\n  // state = {\n  //   images: null,\n  //   id: null,\n  //   searchQuery: '',\n  //   page: 1,\n  //   loadMore: false,\n  //   showModal: false,\n  // };\n  // handleFormSubmit = searchQuery => {\n  //   this.setState({ searchQuery: searchQuery, page: 1, loadMore: false });\n  // };\n  // loadMore = () => {\n  //   this.setState(prevState => ({ page: prevState.page + 1 }));\n  // };\n  // changeButtonLoadMore = status => {\n  //   this.setState({ loadMore: status });\n  // };\n  // openModal = e => {\n  //   this.setState({\n  //     showModal: true,\n  //     id: e.currentTarget.dataset.id,\n  //   });\n  // };\n  // closeModal = e => {\n  //   this.setState({\n  //     showModal: false,\n  //   });\n  // };\n  // getData = images => {\n  //   this.setState({ images });\n  // };\n  // +++++++++++++++++++++++++++++++++++++++++++++++++++++++\n  componentDidUpdate(_, prevState) {\n    const {\n      searchQuery,\n      page\n    } = this.state;\n\n    if (prevState.searchQuery !== searchQuery || prevState.page !== page) {\n      this.getPhotos(searchQuery, page);\n    }\n  }\n\n  // ===================================================\n  render() {\n    const {\n      searchQuery,\n      page,\n      loadMore,\n      showModal,\n      images,\n      id,\n      isEmpty,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AppContainer, {\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSubmit: this.handleFormSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n          position: \"top-center\",\n          autoClose: 3000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageGallery, {\n          openModal: this.openModal,\n          getData: this.getData,\n          searchQuery: searchQuery,\n          page: page,\n          loadMore: this.changeButtonLoadMore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this), isEmpty && /*#__PURE__*/_jsxDEV(ImageErrorView, {\n          message: `No images with name'${this.state.searchQuery}'`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), searchQuery ? /*#__PURE__*/_jsxDEV(ImageGallery, {\n          openModal: this.openModal,\n          images: images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Notify, {\n          children: \"Enter a search query\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), loadMore && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.loadMore,\n          page: page\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 24\n        }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n          images: images,\n          id: Number(id),\n          onClose: this.closeModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/serhiikotcinskiy/Documents/JS 59/goit-react-hw-03-image-finder/src/components/App.jsx"],"names":["Component","ToastContainer","SearchBar","ImageGallery","Button","Modal","ImageErrorView","Loader","imagesAPI","Notify","AppContainer","App","state","images","id","searchQuery","page","isLoading","loadMore","showModal","isEmpty","error","per_page","getPhotos","query","setState","hits","totalHits","console","log","length","prevState","Math","ceil","message","handleFormSubmit","openModal","e","currentTarget","dataset","closeModal","componentDidUpdate","_","render","getData","changeButtonLoadMore","Number"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport SearchBar from 'components/Searchbar';\nimport ImageGallery from 'components/ImageGallery';\nimport Button from 'components/Button';\nimport Modal from 'components/Modal';\nimport ImageErrorView from 'components/ImageErrorView';\nimport Loader from 'components/Loader';\nimport imagesAPI from '../services/api';\nimport { Notify } from './ImageGallery/ImageGallery.styled';\n\nimport { AppContainer } from './App.styled';\n\nexport class App extends Component {\n  state = {\n    images: [],\n    id: null,\n    searchQuery: '',\n    page: 1,\n    isLoading: false,\n    loadMore: false,\n    showModal: false,\n    isEmpty: false,\n    error: null,\n    per_page: 12,\n  };\n\n  // state = {\n  //   images: null,\n  //   id: null,\n  //   searchQuery: '',\n  //   page: 1,\n  //   loadMore: false,\n  //   showModal: false,\n  // };\n\n  // handleFormSubmit = searchQuery => {\n  //   this.setState({ searchQuery: searchQuery, page: 1, loadMore: false });\n  // };\n\n  // loadMore = () => {\n  //   this.setState(prevState => ({ page: prevState.page + 1 }));\n  // };\n\n  // changeButtonLoadMore = status => {\n  //   this.setState({ loadMore: status });\n  // };\n\n  // openModal = e => {\n  //   this.setState({\n  //     showModal: true,\n  //     id: e.currentTarget.dataset.id,\n  //   });\n  // };\n\n  // closeModal = e => {\n  //   this.setState({\n  //     showModal: false,\n  //   });\n  // };\n\n  // getData = images => {\n  //   this.setState({ images });\n  // };\n\n  // +++++++++++++++++++++++++++++++++++++++++++++++++++++++\n  componentDidUpdate(_, prevState) {\n    const { searchQuery, page } = this.state;\n    if (prevState.searchQuery !== searchQuery || prevState.page !== page) {\n      this.getPhotos(searchQuery, page);\n    }\n  }\n\n  getPhotos = async (query, page) => {\n    if (!query) return;\n    this.setState({ isLoading: true });\n    try {\n      const { hits, totalHits } = await imagesAPI(query, page);\n      console.log(hits, totalHits);\n      if (hits.length === 0) {\n        this.setState({ isEmpty: true });\n      }\n      this.setState(prevState => ({\n        images: [...prevState.images, ...hits],\n        loadMore: this.state.page < Math.ceil(totalHits / this.state.per_page),\n      }));\n    } catch (error) {\n      this.setState({ error: error.message });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  };\n\n  handleFormSubmit = searchQuery => {\n    this.setState({\n      searchQuery: searchQuery,\n      page: 1,\n      loadMore: false,\n      images: [],\n      isEmpty: false,\n    });\n  };\n\n  loadMore = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n  };\n\n  openModal = e => {\n    this.setState({\n      showModal: true,\n      id: e.currentTarget.dataset.id,\n    });\n  };\n\n  closeModal = e => {\n    this.setState({\n      showModal: false,\n    });\n  };\n\n  // ===================================================\n\n  render() {\n    const {\n      searchQuery,\n      page,\n      loadMore,\n      showModal,\n      images,\n      id,\n      isEmpty,\n      isLoading,\n    } = this.state;\n    return (\n      <div>\n        <AppContainer>\n          <SearchBar onSubmit={this.handleFormSubmit} />\n          <ToastContainer position=\"top-center\" autoClose={3000} />\n          <ImageGallery\n            openModal={this.openModal}\n            getData={this.getData}\n            searchQuery={searchQuery}\n            page={page}\n            loadMore={this.changeButtonLoadMore}\n          />\n          {isLoading && <Loader />}\n          {isEmpty && (\n            <ImageErrorView\n              message={`No images with name'${this.state.searchQuery}'`}\n            />\n          )}\n          {searchQuery ? (\n            <ImageGallery openModal={this.openModal} images={images} />\n          ) : (\n            <Notify>Enter a search query</Notify>\n          )}\n          {loadMore && <Button onClick={this.loadMore} page={page} />}\n          {showModal && (\n            <Modal images={images} id={Number(id)} onClose={this.closeModal} />\n          )}\n        </AppContainer>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}