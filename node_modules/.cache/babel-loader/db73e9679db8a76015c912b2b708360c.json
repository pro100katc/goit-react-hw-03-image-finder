{"ast":null,"code":"var _jsxFileName = \"/Users/serhiikotcinskiy/Documents/JS 59/goit-react-hw-03-image-finder/src/components/ImageGallery/ImageGallery.jsx\";\nimport ImageGalleryItem from 'components/ImageGalleryItem';\nimport { ImgGallery } from './ImageGallery.styled'; // import { Component } from 'react';\n\nimport { PropTypes } from 'prop-types'; // import ImageErrorView from 'components/ImageErrorView';\n// import Loader from 'components/Loader';\n// import imagesAPI from '../../services/api';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageGallery = _ref => {\n  let {\n    images,\n    openModal\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(ImgGallery, {\n    children: images && images.map(image => {\n      return /*#__PURE__*/_jsxDEV(ImageGalleryItem, {\n        onClick: openModal,\n        image: image\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 8\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ImageGallery;\nImageGallery.propTypes = {\n  images: PropTypes.array\n}; // class ImageGallery extends Component {\n// \tstate = {\n// \t\timages: null,\n// \t\terror: null,\n// \t\tstatus: 'idle',\n// \t};\n// \tcomponentDidUpdate(prevProps, prevState) {\n// \t\tconst { searchQuery, page, getData, loadMore } = this.props;\n// \t\tif (prevProps.searchQuery !== searchQuery || prevProps.page !== page) {\n// \t\t\tthis.setState({ status: 'pending' });\n// \t\t\timagesAPI(searchQuery, page)\n// \t\t\t\t.then(response => {\n// \t\t\t\t\tif (response.total !== 0) {\n// \t\t\t\t\t\tthis.setState({\n// \t\t\t\t\t\t\timages: response.hits,\n// \t\t\t\t\t\t\tstatus: 'resolved',\n// \t\t\t\t\t\t});\n// \t\t\t\t\t\tloadMore(true);\n// \t\t\t\t\t\tgetData(response.hits);\n// \t\t\t\t\t} else {\n// \t\t\t\t\t\tthis.setState({ status: 'rejected' });\n// \t\t\t\t\t\tloadMore(false);\n// \t\t\t\t\t\tgetData(null);\n// \t\t\t\t\t}\n// \t\t\t\t})\n// \t\t\t\t.catch(error => this.setState({ error, status: 'rejected' }));\n// \t\t}\n// \t}\n// \trender() {\n// \t\tconst { images, status } = this.state;\n// \t\tif (status === 'idle') {\n// \t\t\treturn <Notify >Please enter the name of the images and photos</Notify>;\n// \t\t}\n// \t\tif (status === 'pending') {\n// \t\t\treturn <Loader />;\n// \t\t}\n// \t\tif (status === 'rejected') {\n// \t\t\treturn (\n// \t\t\t\t<ImageErrorView\n// \t\t\t\t\tmessage={`No images find of ${this.props.searchQuery}`}\n// \t\t\t\t/>\n// \t\t\t);\n// \t\t}\n//     if (status === 'resolved') {\n// \t\t\treturn (\n//         <ImgGallery>\n// \t\t\t\t\t{images.map(image => {\n// \t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t<ImageGalleryItem\n// \t\t\t\t\t\t\t\tonClick={this.props.openModal}\n// \t\t\t\t\t\t\t\tkey={image.id}\n// \t\t\t\t\t\t\t\timage={image}\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t);\n// \t\t\t\t\t})}\n// \t\t\t\t</ImgGallery>\n// \t\t\t);\n// \t\t}\n// \t}\n// }\n// ImageGallery.propTypes = {\n//   searchQuery: PropTypes.string,\n//   page: PropTypes.number,\n// \topenModal: PropTypes.func.isRequired,\n// \tgetData: PropTypes.func.isRequired,\n// \tloadMore: PropTypes.func.isRequired,\n// };\n\nexport default ImageGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageGallery\");","map":{"version":3,"sources":["/Users/serhiikotcinskiy/Documents/JS 59/goit-react-hw-03-image-finder/src/components/ImageGallery/ImageGallery.jsx"],"names":["ImageGalleryItem","ImgGallery","PropTypes","ImageGallery","images","openModal","map","image","id","propTypes","array"],"mappings":";AAAA,OAAOA,gBAAP,MAA6B,6BAA7B;AACA,SAASC,UAAT,QAA2B,uBAA3B,C,CACA;;AACA,SAASC,SAAT,QAA0B,YAA1B,C,CACA;AACA;AACA;;;;AAGA,MAAMC,YAAY,GAAE;AAAA,MAAC;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAD;AAAA,sBAChB,QAAC,UAAD;AAAA,cACED,MAAM,IAAIA,MAAM,CAACE,GAAP,CAAWC,KAAK,IAAI;AAC9B,0BACC,QAAC,gBAAD;AACC,QAAA,OAAO,EAAEF,SADV;AAGC,QAAA,KAAK,EAAEE;AAHR,SAEMA,KAAK,CAACC,EAFZ;AAAA;AAAA;AAAA;AAAA,cADD;AAOA,KARU;AADZ;AAAA;AAAA;AAAA;AAAA,UADgB;AAAA,CAApB;;KAAML,Y;AAcNA,YAAY,CAACM,SAAb,GAAyB;AACxBL,EAAAA,MAAM,EAAEF,SAAS,CAACQ;AADM,CAAzB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeP,YAAf","sourcesContent":["import ImageGalleryItem from 'components/ImageGalleryItem';\nimport { ImgGallery } from './ImageGallery.styled';\n// import { Component } from 'react';\nimport { PropTypes } from 'prop-types';\n// import ImageErrorView from 'components/ImageErrorView';\n// import Loader from 'components/Loader';\n// import imagesAPI from '../../services/api';\n\n\nconst ImageGallery =({images, openModal})=> (\n\t\t\t\t<ImgGallery>\n\t\t\t\t\t{images && images.map(image => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<ImageGalleryItem\n\t\t\t\t\t\t\t\tonClick={openModal}\n\t\t\t\t\t\t\t\tkey={image.id}\n\t\t\t\t\t\t\t\timage={image}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ImgGallery>\n\t\t\t)\n\nImageGallery.propTypes = {\n\timages: PropTypes.array,\n};\n\n// class ImageGallery extends Component {\n// \tstate = {\n// \t\timages: null,\n// \t\terror: null,\n// \t\tstatus: 'idle',\n// \t};\n// \tcomponentDidUpdate(prevProps, prevState) {\n// \t\tconst { searchQuery, page, getData, loadMore } = this.props;\n// \t\tif (prevProps.searchQuery !== searchQuery || prevProps.page !== page) {\n// \t\t\tthis.setState({ status: 'pending' });\n// \t\t\timagesAPI(searchQuery, page)\n// \t\t\t\t.then(response => {\n// \t\t\t\t\tif (response.total !== 0) {\n// \t\t\t\t\t\tthis.setState({\n// \t\t\t\t\t\t\timages: response.hits,\n// \t\t\t\t\t\t\tstatus: 'resolved',\n// \t\t\t\t\t\t});\n// \t\t\t\t\t\tloadMore(true);\n// \t\t\t\t\t\tgetData(response.hits);\n// \t\t\t\t\t} else {\n// \t\t\t\t\t\tthis.setState({ status: 'rejected' });\n// \t\t\t\t\t\tloadMore(false);\n// \t\t\t\t\t\tgetData(null);\n// \t\t\t\t\t}\n// \t\t\t\t})\n// \t\t\t\t.catch(error => this.setState({ error, status: 'rejected' }));\n// \t\t}\n// \t}\n\n// \trender() {\n// \t\tconst { images, status } = this.state;\n\n// \t\tif (status === 'idle') {\n// \t\t\treturn <Notify >Please enter the name of the images and photos</Notify>;\n// \t\t}\n// \t\tif (status === 'pending') {\n// \t\t\treturn <Loader />;\n// \t\t}\n// \t\tif (status === 'rejected') {\n// \t\t\treturn (\n// \t\t\t\t<ImageErrorView\n// \t\t\t\t\tmessage={`No images find of ${this.props.searchQuery}`}\n// \t\t\t\t/>\n// \t\t\t);\n// \t\t}\n//     if (status === 'resolved') {\n  \n// \t\t\treturn (\n//         <ImgGallery>\n            \n// \t\t\t\t\t{images.map(image => {\n// \t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t<ImageGalleryItem\n// \t\t\t\t\t\t\t\tonClick={this.props.openModal}\n// \t\t\t\t\t\t\t\tkey={image.id}\n// \t\t\t\t\t\t\t\timage={image}\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t);\n// \t\t\t\t\t})}\n// \t\t\t\t</ImgGallery>\n// \t\t\t);\n// \t\t}\n// \t}\n// }\n\n// ImageGallery.propTypes = {\n//   searchQuery: PropTypes.string,\n//   page: PropTypes.number,\n// \topenModal: PropTypes.func.isRequired,\n// \tgetData: PropTypes.func.isRequired,\n// \tloadMore: PropTypes.func.isRequired,\n// };\n\nexport default ImageGallery;\n"]},"metadata":{},"sourceType":"module"}